syntax = "proto3";

package demo.api.v1;

import "google/protobuf/timestamp.proto";

option go_package = ".;pb";

service Demo {
  rpc Status(StatusRequest) returns (Response) {};

  rpc Create(CreateRequest) returns (Response) {};
  rpc Read(ReadRequest) returns (Response) {};
  rpc Update(UpdateRequest) returns (Response);
  rpc Delete(DeleteRequest) returns (Response);
}

message StatusRequest {}

enum Env {
  DEV = 0;
  STG = 1;
  PRD = 2;
}

message Entity {
  string name = 1;
  int64 value = 2;
}

message CreateRequest {
  Env env = 1;
  Entity entity = 2;
}

// ReadRequest holds all kind of protobuf types for testing
message ReadRequest {
  Env env = 1;
  repeated string names = 2;
  map<string, Entity> stuff = 3;
  map<int64, Entity> stuff2 = 4;
  map<bool, Entity> stuff3 = 5;
  google.protobuf.Timestamp expire_time = 6;
}

message UpdateRequest {
  Env env = 1;
  Entity entity = 2;
}

message DeleteRequest {
  Env env = 1;
  string name = 2;
}

message Response {
  enum Status {
    OK = 0;
    KO = 1;
  }
  Status status = 1;
}
